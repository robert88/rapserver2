"use strict";

const toReg = require("./toReg.js");

module.exports = function (fn, replaceKeyWords) {
	
  var str = fn.toString();
  let code = "";
  let arg="";

 var objectFunctionReg = /^\s*async(\s*function\s*\([^\)]*\))\s*\{([\u0000-\uFFFF]*)\}$/igm;
 var objectArrowReg = /^\s*async(\s*\([^\)]*\))\s*=>\s*\{([\u0000-\uFFFF]*)\}$/igm;
 var normal = /^\s*async(\s*[^\{]*)\{([\u0000-\uFFFF]*)\}$/igm;
 var matchReg ;
 if(objectFunctionReg.test(str)){
  // async function({b}){}

  objectFunctionReg.lastIndex = 0;
  matchReg = objectFunctionReg;
 }else if(objectArrowReg.test(str)){
     // async ({b,a})=>{}
       // async (a,b)=>{}
     objectArrowReg.lastIndex = 0;
     matchReg = objectArrowReg;
  }else{
 // async a=>{}

  matchReg = normal;
}

 str.replace(matchReg, function(m,m1,m2){

 if(m1.indexOf("=>")!=-1){
   arg = m1.replace(/^[^\(]+\(([\u0000-\uFFFF]*)\)\s*=>\s*$/,"$1");
 }else{
   arg = m1.replace(/^[^\(]+\(([\u0000-\uFFFF]*)\)\s*$/,"$1");
 }

 code = m2;
});

  if(code==""||str==code){
	  throw Error("can not find async function!");
  }
  //手动替换
  if (replaceKeyWords) {
    if (typeof replaceKeyWords == "object") {
      code = code.replace(/(\b)await\s/g, "$1");
      replaceKeyWords.forEach(keyword => {
        code = code.replace(new RegExp(toReg.call(keyword), "g"), keyword + "Sync");
      })
    } else {
      code = code.replace(new RegExp(toReg.call(replaceKeyWords), "g"), replaceKeyWords + "Sync");
    }

  }

  //自动替换
  code = code.replace(/(\b)await(\s*[^\(]+)\]\(/igm, '$1$2+"Sync"](');

  code = code.replace(/(\b)await(\s*[^\(]+)\(/igm, "$1$2Sync(");

  code = code.replace(/\\"/gm,"#makeSyncFunc_quote#").replace(/("[^"]*\b)async(\b[^"]*")/gm, function(m,m1,m2){return m1+"#makeSyncFunc_keyword#"+m2}).replace(/#makeSyncFunc_quote#/gm,'\\"');

  code = code.replace(/\\'/gm,"#makeSyncFunc_quote#").replace(/('[^']*\b)async(\b[^']*')/gm, function(m,m1,m2){return m1+"#makeSyncFunc_keyword#"+m2}).replace(/#makeSyncFunc_quote#/gm,"\\'");

  code = code.replace(/(\b)async(\b)/g, "$1$2");

  code = code.replace(/#makeSyncFunc_keyword#/g, "async");

  return new Function(`return function(${arg}){${code}}`)();

}
